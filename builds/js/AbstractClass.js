// Generated by Haxe 4.3.1
(function ($global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var AbstractClass = function() { };
AbstractClass.main = function() {
	var animals = [new abstractClass_model_Cat(),new abstractClass_model_Dog()];
	var _g = 0;
	while(_g < animals.length) {
		var animal = animals[_g];
		++_g;
		animal.Roar();
	}
};
var abstractClass_model_Animal = function() {
};
var abstractClass_model_Cat = function() {
	abstractClass_model_Animal.call(this);
};
abstractClass_model_Cat.__super__ = abstractClass_model_Animal;
abstractClass_model_Cat.prototype = $extend(abstractClass_model_Animal.prototype,{
	Roar: function() {
		console.log("abstractClass/model/Cat.hx:5:","Miaou");
	}
});
var abstractClass_model_Dog = function() {
	abstractClass_model_Animal.call(this);
};
abstractClass_model_Dog.__super__ = abstractClass_model_Animal;
abstractClass_model_Dog.prototype = $extend(abstractClass_model_Animal.prototype,{
	Roar: function() {
		console.log("abstractClass/model/Dog.hx:5:","Wouf");
	}
});
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
AbstractClass.main();
})({});
